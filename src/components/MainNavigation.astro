---
import NavLink from '@components/NavLink.astro';
import HamburgerMenu from '@astropub/icons/HamburgerMenu';
import ThemeToggle from '@components/ThemeToggle.astro';
// Add isDev flag for development mode
const isDev = import.meta.env.MODE === 'development';
---

<a class="open-nav-link" href="#">
  <HamburgerMenu />
</a>
<nav class="main-navigation">
  <span class="close">&times;</span>
  <section class="nav-name">
    <div class="circle"></div>
    <div class="name">Danny Smith</div>
  </section>
  <section class="nav-nav-links">
    <ul>
      <li><NavLink href="/">Home</NavLink></li>
      <li><NavLink href="/writing">Writing</NavLink></li>
      <li><NavLink href="/notes">Notes</NavLink></li>
      {
        isDev && (
          <li>
            <NavLink href="/styleguide">Styleguide</NavLink>
          </li>
        )
      }
    </ul>
    <div class="theme-toggle-nav-wrapper">
      <ThemeToggle />
    </div>
  </section>
</nav>

<style>
  :root {
    --mainnav-openlink-foreground: var(--c-primary);
    --mainnav-openlink-background: rgba(255, 255, 255, 0.6);
    --mainnav-background: var(--color-bg-dark-200);
    --mainnav-foreground: var(--c-white);
    --mainnav-border: var(--c-primary);
    --mainnav-dot: var(--c-primary);
    --mainnav-closebutton: var(--c-white);
    --mainnav-link-hover: var(--c-primary);
  }
  .open-nav-link {
    display: block;
    position: absolute;
    top: 1rem;
    left: 1rem;
    width: 2em;
    height: 2em;
    padding: 0.5em;
    border-radius: 1px;
    z-index: 1000;
    color: var(--mainnav-openlink-foreground);
    cursor: pointer;
    background: var(--mainnav-openlink-background);
  }

  .main-navigation {
    position: fixed;
    left: -100%;
    height: 100vh;
    z-index: 1000;
    background-color: var(--mainnav-background);
    color: var(--mainnav-foreground);
    border-right: 1rem solid var(--mainnav-border);
    padding: 1em 2em 1em 1em;
    font-size: clamp(0.8rem, calc(0.6rem + 1vw), 1.2rem);
    transition: left 0.2s ease-in-out;
  }

  .main-navigation.open {
    left: 0;
  }

  ul {
    padding: 0;
    margin: 0;
  }

  li {
    list-style-type: none;
  }

  .nav-name {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .circle {
    width: clamp(1rem, calc(0.8rem + 1vw), 1.5rem);
    height: clamp(1rem, calc(0.8rem + 1vw), 1.5rem);
    background-color: var(--mainnav-dot);
    border-radius: 50%;
  }
  .name {
    text-transform: uppercase;
    line-height: 1;
    letter-spacing: 0.05ch;
    font-weight: 700;
    text-align: left;
  }

  .nav-nav-links {
    margin-top: 1rem;
    padding-left: 2rem;

    li {
      text-transform: uppercase;
      letter-spacing: 0.1ch;
      list-style-type: none;
      padding: 0;
      line-height: 1.65;
    }

    a,
    a:link,
    a:visited {
      padding: 0.5rem;
      text-decoration: none;
      color: var(--mainnav-foreground);
    }

    a:hover,
    a:active,
    a:focus,
    a.active {
      color: var(--mainnav-link-hover);
    }
  }
  .close {
    position: absolute;
    top: 0.7em;
    right: 0.7em;
    font-size: 1em;
    color: var(--mainnav-closebutton);
    cursor: pointer;
  }

  .theme-toggle-nav-wrapper {
    margin-top: 1.5rem;
    display: flex;
    justify-content: flex-start;
  }
</style>

<script>
  const closeNav = () => {
    document.querySelector('.main-navigation')?.classList.remove('open');
  };

  const openNav = () => {
    document.querySelector('.main-navigation')?.classList.add('open');
  };

  document.querySelector('.close')?.addEventListener('click', closeNav);
  document.querySelector('main')?.addEventListener('click', closeNav);
  document.querySelector('footer')?.addEventListener('click', closeNav);
  document.querySelector('.open-nav-link')?.addEventListener('click', openNav);
</script>
